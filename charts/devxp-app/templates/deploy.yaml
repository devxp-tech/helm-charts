{{- if .Values.deployment.enabled }}
{{- if not .Values.argoRollouts.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ include "namespace" . }}
  labels: {{- include "devxp-app.labels" . | nindent 4 }}
  annotations: {{- .Values.deployment.annotations | toYaml | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "devxp-app.labels" . | nindent 8 }}
    spec:
      {{- if not .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      {{- end }}
      serviceAccountName: {{ .Values.name }}
      containers:
      - name: {{ .Values.name }}
        image: {{ include "image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: {{- include "all-envs" . | nindent 12 }}
        envFrom: {{- toYaml .Values.envFrom | nindent 12 }}
        ports:
        - name: http
          containerPort: {{ .Values.container.port }}
        resources: {{ toYaml .Values.resources | nindent 12 }}
        {{- if not .Values.probe.enabled }}
        livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe: {{ toYaml .Values.readinessProbe | nindent 12 }}
        {{- end }}
        volumeMounts: {{ toYaml (default list .Values.volumeMounts)  | nindent 12 }}
      nodeSelector: {{ toYaml (default dict .Values.nodeSelector) | nindent 8 }}
      affinity: {{ toYaml (default dict .Values.affinity) | nindent 8 }}
      tolerations: {{ toYaml (default list .Values.tolerations)  | nindent 8 }}
      volumes: {{ toYaml (default list .Values.volumes)  | nindent 8 }}
  minReadySeconds: 30
{{- end }}
{{- end }}



