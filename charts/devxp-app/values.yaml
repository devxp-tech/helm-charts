# Default values for devxp-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# --name is the github repository name of this application deploy
name: ""

namespace:
  enabled: true

global:
  # --cluster Set Cluster Name
  cluster: cluster.local
  # --commonLabels set common labels for all resources
  commonLabels: {}
  # team_name: dev

# --deployment Disabled Deployment
deployment:
  # --enabled default false
  enabled: false

# --nsLabels
nsLabels:
  # enable istio-injection label on namespace
  istio-injection: enabled
nsAnnotations:
  {}
  # sidecar.jaegertracing.io/inject: "true"
podAnnotations: {}

serviceAnnotations: {}
serviceLabels: {}
externalDns:
  enabled: false

# -- Network
network:
  # --domain Set Default Domain
  domain: devxp-tech.io
  # --service An abstract way to expose an application running on a set of Pods as a network service.
  service:
    type: ClusterIP
    # --port is the port your application runs under
    port: 80
    nodePort: {}
  # --gateways set default gateway for virtual-service
  gateways: istio-system/istio-ingressgateway

# --istioInjection enable istio injection
# istioInjection:
#   enabled: true

# --ingress Ingress exposes HTTP and HTTPS routes from outside the cluster to services within the cluster.
ingress:
  # -- enable ingress
  enabled: true

# --ServiceAccount A service account provides an identity for processes that run in a Pod, about more: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
ServiceAccount:
  # --Specifies whether a service account should be created
  enabled: true
  # --Annotations to add to the service account
  annotations: {}

# --PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.
peerAuthentication:
  # --enable PeerAuthentication
  enabled: true

# --replicaCount is used when autoscaling.enabled is false to set a manually number of pods
replicaCount: 1
# --autoscaling is the main object of autoscaling
autoscaling:
  # --enabled is the flag to sinalize this funcionality is enabled
  enabled: true
  # --minReplicas is the number of mim pods to be running
  minReplicas: 1
  # --maxReplicas is the number of maximum scaling pods
  maxReplicas: 2
  # --targetCPUUtilizationPercentage is the percentage of cpu when reached to scale new pods
  targetCPUUtilizationPercentage: 80
  # --targetMemoryUtilizationPercentage is the percentage of memoty when reached to scale new pods
  targetMemoryUtilizationPercentage: 80
  # --customRules is a place to customize your application autoscaler using the original API available at: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  customRules:
    []
    # - type: Resource
    #   resource:
    #     name: memory
    #     target:
    #       type: Utilization
    #       averageUtilization: 20

container:
  # --port is the port your application runs under
  port: 8080

  # --image is the object to specify the image to run in the deployment
image:
  # --repository: is the registry of your application ex:556684128444.dkr.ecr.us-east-1.amazonaws.com/YOU-APP-ECR-REPO-NAME
  # if empty this helm will auto generate the image using aws.registry/values.name:values.image.tag
  repository: ""
  # --pullPolicy is the prop to setup the behavior of pull police. options is: IfNotPresent \| allways
  pullPolicy: IfNotPresent
  # --especify the tag of your image to deploy
  tag: "latest"

# --imagePullSecrets secret used to download image on private container registry
imagePullSecrets:
  # --imagePullSecrets.enabled create secret do pull docker images in private registrys
  enabled: true
  name: ghcr-secret

# --resources set deployment resources
resources:
  requests:
    cpu: "50m"
    memory: "64Mi"
  limits:
    cpu: "100m"
    memory: "128Mi"

probe:
  enabled: true

livenessProbe:
  httpGet:
    path: /health-check/liveness
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health-check/readiness
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 10

nodeSelector: {}
tolerations: []
affinity: {}

env:
  []
  # examples:
  # please note that when the value is a number, you must quote the value to cast to string!
  # - name: ENVIROMENT
  #   value: dev

envFrom:
  []
  # examples:
  # please note that when the value is a number, you must quote the value to cast to string!
  # - configMapRef
  #     name: postgres-configs

sealedSecrets:
  enabled: true
  encryptedData: AgDGBqpFurhI5BktCG/olnD7r2MuhAel/zkL1IL0BxrcaDUmR8JUf3TEkMqKbiRgb9iKYcwX7zVOXI4xDJeiyWyWDbckn8Yc+RBTw7qpKhh3kMUasPVo9blEcrKq4HjSEAEKapegBDT+H1LhjUToDoqwXVmGFEVYpiHtb0OA0OCtUuDZ2dYD4cLpMSVgZ/8hRfilRdD4PqXD+k1NEVZfRgKGl9fV0mazKm9e7w0rRI1brryhWx9+VZcvSi6RLHiELX7VOObxxjQ0W4gCuHKDRztgHoNDR+KVNum6YpVz8vOXQ/XpBxlASundsryNBAVcPwv0HYQDmsNFfMwXaLkLA+Hg6frWXi1CJvSrJc45U8RQ2sAfbCN6QQw1r6O+Lgqc2hmWnx3RzOva6zIq2UqUNRDrKxn99zZUCU4GpmVLFnj08ogq0p86zUXqzA6o1Qz1KRZu2S0QaQQyMquN4vqByXRfbXrgG5rtQRALsRG3o7q7OfOoy1sa1mF6kMyktpbawE7eT0k0FGPdjEtgg5FzLD88pj5OphL1aNTVzgSLVMpT0KY8GHVlB5AlMxz+ilB0bfSs+S5fGsY5u4iOpUAioAQ2lZH/aK8tMMug4pCRsYvDD6AUWlCupzGHhjVNeWDvhGpUG8anpr0htCxqLAGLJaMGV/hcuwbRzdxgKbPjqd/HFpzwi9ZN17IN1vtQhGm3xR781WTBAeLzU7XykzLh8VuUPhS6c8vdNsXXXYubSXrCAddAycXc5YThp/TzfOlPzn/3kkQZZRKUs3Qp393djTaEG75W/CpnQXG4Pnvk9a4swUCm2ZwNYCZdCjBccutcahlKa8mNG4sDeYbpLOG4ZICo2MuKNoJG2DqmemSUGKeThSyhW8v2CjoKqKhGSKbpUjI43c5dK4TueC88DYMZGX2TF5yOtXwmQbjsutAd3n2ELujLpg==

# --ResourceQuota provides constraints that limit aggregate resource consumption per namespace
argoRollouts:
  # --Specifies whether a resource quota should be created
  enabled: true
  revisionHistoryLimit: 5
  strategy:
    dynamicStableScale: true
    steps:
      - setWeight: 5
      - pause:
          duration: 10s
      - setWeight: 20
      - pause:
          duration: 10s
      - setWeight: 40
      - pause:
          duration: 10s
      - setWeight: 60
      - pause:
          duration: 10s
      - setWeight: 80
      - pause:
          duration: 10s

# --ResourceQuota provides constraints that limit aggregate resource consumption per namespace
quota:
  # --Specifies whether a resource quota should be created
  enabled: true
  resources:
    hard:
      requests.cpu: "1"
      requests.memory: 1Gi
      limits.cpu: "2"
      limits.memory: 2Gi

migration:
  # -- enable liquibase migration
  enabled: false
